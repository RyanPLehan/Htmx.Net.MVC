@model PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form hx-trigger="submit"
      hx-get=""
      hx-target="#root"
      hx-swap="innerHTML">
    <div class="form-actions no-color">
        <p>
            <label>Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-primary"/> 
            |
            <a href="/students"
               hx-trigger="click"
               hx-get="/students"
               hx-target="#root"
               hx-swap="innerHTML"
               hx-push-url="/students">
                Back to Full List
            </a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a href="?sortOrder=@ViewData["NameSortParm"]&currentFilter=@ViewData["CurrentFilter"]"
                   hx-trigger="click"
                   hx-get="?sortOrder=@ViewData["NameSortParm"]&currentFilter=@ViewData["CurrentFilter"]"
                   hx-target="#root"
                   hx-swap="innerHTML">
                    Last Name
                </a>
            </th>
            <th>
                First Name
            </th>
            <th>
                <a href="?sortOrder=@ViewData["DateSortParm"]&currentFilter=@ViewData["CurrentFilter"]"
                   hx-trigger="click"
                   hx-get="?sortOrder=@ViewData["DateSortParm"]&currentFilter=@ViewData["CurrentFilter"]"
                   hx-target="#root"
                   hx-swap="innerHTML">
                    Enrollment Date
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a class="btn btn-outline-primary @prevDisabled"
   href="?sortOrder=@ViewData["CurrentSort"]&currentFilter=@ViewData["CurrentFilter"]&pageNumber=@(Model.PageIndex - 1)"
   hx-trigger="click"
   hx-get="?sortOrder=@ViewData["CurrentSort"]&currentFilter=@ViewData["CurrentFilter"]&pageNumber=@(Model.PageIndex - 1)"
   hx-target="#root"
   hx-swap="innerHTML">
    Previous
</a>

<a class="btn btn-outline-primary @nextDisabled"
   href="?sortOrder=@ViewData["CurrentSort"]&currentFilter=@ViewData["CurrentFilter"]&pageNumber=@(Model.PageIndex + 1)"
   hx-trigger="click"
   hx-get="?sortOrder=@ViewData["CurrentSort"]&currentFilter=@ViewData["CurrentFilter"]&pageNumber=@(Model.PageIndex + 1)"
   hx-target="#root"
   hx-swap="innerHTML">
    Next
</a>